#!/bin/bash
# nlpp -- Run the pipeline
# 20171010 Paul Huygen
export thisdir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
scriptname=${0##*/}
scriptpath=$thisdir/$scriptname
initscript=${thisdir}/conf
source $initscript
res=0

function get_language() {
    if
	[ -z "${NAFLANG+x}" ]
    then
	naffile=`mktemp -t naf.XXXXXX`
	cat >$naffile
	export NAFLANG=`cat $naffile | python $BINDIR/langdetect.py` 
        cat $naffile | $scriptpath
	result=$?
	rm $naffile
    fi

}


function runmodule {
   local infile=$1
   local modnam=$2
   local outfile=$3
   cat ${infile} | $MODROOT/${modnam}/run > ${outfile}
   res=$?
}


# run_pipeline -- run the pipeline
# arg:
# 1: path to file with list of modules
function run_pipeline {
    local modulelist=$1
    local infile=in.naf
    local lastfile=$infile
    rundir=`mktemp -d -t nlpp.XXXXXX`
    cd $rundir
    cat > ${infile}
    res=0
    while
	IFS=' ' read -r module || [[ -n "$module" ]]
    do
	echo "Annotate ${lastfile} with ${module}" >&2
	runmodule ${lastfile} ${module} ${module}.naf
	lastfile=${module}.naf
	if
	    [ $res -gt 0 ]
	then
	    errormodule=${module}
	    break
	fi
	lastfile=${module}.naf
    done < ${modulelist}
    if
	[ $res -gt 0 ]
    then
	echo "Error occurred in " ${errormodule} >&2
    else
	cat ${lastfile}
    fi
    rm -rf $tempdir
}


if
    [ -z "${NAFLANG+x}" ]
then
    get_language()
else
    if
	[ "${NAFLANG}" == "en" ]
    then
	run_pipeline ${thisdir}/modules.en
    elif
	[ "${NAFLANG}" == "nl" ]
    then
	run_pipeline ${thisdir}/modules.nl
    else
	echo "Cannot process docs in language " ${NAFLANG} > &2
    fi
fi
